{"version":3,"sources":["webpack:///app.min.js","webpack:///webpack/bootstrap 130408178ba4f894a359","webpack:///./js/animated-sheet.js","webpack:///./js/app.js","webpack:///./js/position-helper.js","webpack:///./js/popup-icons.js","webpack:///./js/path-animations.js","webpack:///./js/animation-1.js","webpack:///./js/animation-2.js","webpack:///./js/animation-3.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","AnimatedSheet","svgSelector","options","this","d3","selection","moveToFront","each","parentNode","appendChild","svgElement","$","console","error","d3Svg","select","attr","width","self","reformatViewbox","positionShiftY","window","innerWidth","viewboxValue","positionShiftX","Foundation","MediaQuery","current","scopes","defs","forEach","def","index","filter","keyframes","keyframe","scopeIndex","createScope","create","element","warn","addEventListener","animate","value","svgPosition","position","top","progress","pageYOffset","from","resizeBreakpointsToMedia","y","to","interpolate","percent","totalLength","progressFromStart","openPercent","Math","min","max","running","animatedElement","remove","on","x","factor","t","pow","sin","PI","positionHelper","popupIcons","pathAnimation","firstAnimation","secondAnimation","thirdAnimation","document","foundation","path1","icons1","sheet1","sheet2","sheet3","show","PositionHelper","positionDisplay","append","style","centerOffsetDisplay","scrollDisplay","html","event","pageX","pageY","centerOffset","PopupIcons","indexOf","viewportTop","scrollTop","viewportBottom","height","round","offset","addClass","PathAnimation","svg","path","w","bezierLine","line","curve","curveBasis","stroke","selectAll","data","enter","strokeLength","getTotalLength","posY","lineSpeed","endEvent","Event","dispatchEvent","interpolatePercent","rotation","interpolateNumber","easeOutElastic","trajectoryPoints","trailcurve","curveCatmullRom","trajectory","getPointAtLength","node","arc","interpolateObject","pos","startY","innerHeight","color"],"mappings":"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","file":"app.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Animated svg sections\nmodule.exports = function () {\n    function AnimatedSheet(svgSelector, options) {\n        _classCallCheck(this, AnimatedSheet);\n\n        d3.selection.prototype.moveToFront = function () {\n            return this.each(function () {\n                this.parentNode.appendChild(this);\n            });\n        };\n\n        this.svgElement = $(svgSelector);\n        //if(this.svgElement) {\n        //    this.svg = svgElement;\n        //} else {\n        if (!this.svgElement) {\n            console.error('No svg found by selector \"' + svgSelector + '\"');\n        }\n\n        this.d3Svg = d3.select(svgSelector).attr('width', options.width ? options.width : '100%');\n\n        var self = this;\n\n        // resize viewbox on small displays\n        var reformatViewbox = function reformatViewbox() {\n            var screenWidth = 1920;\n            var screenHeight = 2000;\n            var positionShiftX = 0;\n            var positionShiftY = -(1 / window.innerWidth) * 100 * 100 * 25;\n            var viewboxValue = positionShiftX + ' ' + positionShiftY + ' ' + screenWidth + ' ' + screenHeight;\n\n            //console.log('reformat', viewboxValue);\n            self.d3Svg.attr('height', 2000).attr('viewBox', viewboxValue).attr('preserveAspectRatio', 'xMinYMin meet');\n\n            if (Foundation.MediaQuery.current === 'medium') {\n                self.d3Svg.attr('height', 1400);\n            }\n            if (Foundation.MediaQuery.current === 'small') {\n                self.d3Svg.attr('height', 800);\n            }\n        };\n\n        this.scopes = [];\n\n        if (options.defs) {\n            options.defs.forEach(function (def, index) {\n                if (def.filter) {\n                    def.filter(self.d3Svg);\n                }\n            });\n        }\n\n        //this.init = function() {\n        options.keyframes.forEach(function (keyframe, scopeIndex) {\n            var createScope = keyframe.create(self.d3Svg);\n            if (createScope.element) {\n                createScope.element.attr('visibility', 'visible');\n            } else {\n                console.warn('The create function should return the element key, so it can be accessed in the animate/interpolate function via the \"createScope\" parameter');\n            }\n            self.scopes[scopeIndex] = createScope;\n        });\n        reformatViewbox();\n        window.addEventListener('resize', reformatViewbox);\n        //}();\n        this.keyframes = options.keyframes;\n\n        return this.animate();\n    }\n\n    _createClass(AnimatedSheet, [{\n        key: 'animate',\n        value: function animate() {\n            var self = this;\n            var h = 1080;\n            var svgPosition = this.svgElement.position().top;\n            var progress = window.pageYOffset - svgPosition + h;\n            this.keyframes.forEach(function (keyframe, scopeIndex) {\n                var from = self.resizeBreakpointsToMedia(0, keyframe.from).y;\n                var to = self.resizeBreakpointsToMedia(0, keyframe.to).y;\n                if (keyframe.interpolate) {\n                    var percent = 0;\n                    // start default value\n                    if (progress < from) {\n                        percent = 0;\n                    }\n                    // all values inbetween\n                    if (progress >= from && progress <= to) {\n                        var totalLength = to - from;\n                        var progressFromStart = progress - from;\n                        var openPercent = progressFromStart * 100 / totalLength;\n                        percent = Math.min(Math.max(0, openPercent), 100) / 100;\n                    }\n                    // end default value\n                    if (progress > to) {\n                        percent = 1;\n                    }\n                    //console.log('from', from, 'to', to, 'progress', progress, 'percent', percent);\n                    keyframe.interpolate(self.d3Svg, self.scopes[scopeIndex], percent);\n                } else {\n                    //console.log('position', keyframe.position, 'progress', progress, 'remove', keyframe.remove);\n                    if (progress >= keyframe.position && !keyframe.running) {\n                        var animatedElement = keyframe.animate(self.d3Svg, self.scopes[scopeIndex]);\n                        if (keyframe.remove) {\n                            animatedElement.on('end', function () {\n                                this.remove();\n                            });\n                        }\n                        keyframe.running = true;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {}\n    }, {\n        key: 'resizeBreakpointsToMedia',\n        value: function resizeBreakpointsToMedia(x, y) {\n            var factor = 1.115;\n            if (Foundation.MediaQuery.current === 'medium') {\n                factor = 0.84;\n            }\n            if (Foundation.MediaQuery.current === 'small') {\n                factor = 0.72;\n            }\n\n            return {\n                x: x * factor,\n                y: y * factor\n            };\n        }\n    }], [{\n        key: 'easeOutElastic',\n        value: function easeOutElastic(t) {\n            var p = 0.4;\n            return Math.pow(2, -10 * t) * Math.sin((t - p / 4) * (2 * Math.PI) / p) + 1;\n        }\n    }]);\n\n    return AnimatedSheet;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar positionHelper = __webpack_require__(2);\nvar popupIcons = __webpack_require__(3);\nvar pathAnimation = __webpack_require__(4);\nvar animatedSheet = __webpack_require__(0);\n\nvar firstAnimation = __webpack_require__(5);\nvar secondAnimation = __webpack_require__(6);\nvar thirdAnimation = __webpack_require__(7);\n\n$(document).foundation();\n\n// TODO: generalize svg attribute initialization somewhere\nvar screenWidth = 1920;\nvar screenHeight = 2000;\nvar positionShiftX = 0;\nvar positionShiftY = -(1 / window.innerWidth) * 100 * 100 * 25;\nvar viewboxValue = positionShiftX + ' ' + positionShiftY + ' ' + screenWidth + ' ' + screenHeight;\n\nvar d3Svg = d3.select('#svg-1').attr('width', '100%').attr('height', '2000').attr('viewBox', viewboxValue).attr('preserveAspectRatio', 'xMinYMin meet');\n\nvar path1 = new pathAnimation();\nvar icons1 = new popupIcons();\n\nvar sheet1 = firstAnimation;\nvar sheet2 = secondAnimation;\nvar sheet3 = thirdAnimation;\n\nd3.select(window).on('scroll.scroller', function () {\n    path1.animate();\n    icons1.animate();\n    sheet1.animate();\n    sheet2.animate();\n    sheet3.animate();\n});\n\nvar helper = new positionHelper().show();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Helper that shows x/y position of the cursor\nmodule.exports = function () {\n    function PositionHelper() {\n        _classCallCheck(this, PositionHelper);\n\n        this.positionDisplay = d3.select('body').append('div').attr('data-allow-html', true).attr('class', 'tooltip top').style('display', 'none');\n        this.centerOffsetDisplay = d3.select('body').append('div').attr('class', 'tooltip right').style('display', 'none');\n        this.scrollDisplay = d3.select('body').append('span').attr('class', 'tooltip bottom').style('width', '200px').style('text-align', 'center').style('display', 'none');\n    }\n\n    _createClass(PositionHelper, [{\n        key: 'show',\n        value: function show() {\n            var self = this;\n\n            d3.select(window).on('mousemove', function () {\n                self.positionDisplay.html('x: ' + d3.event.pageX + '<br /> y: ' + d3.event.pageY).style('top', d3.event.pageY - 100 + 'px').style('left', d3.event.pageX - 34 + 'px').style('display', 'inline');\n                var centerOffset = d3.event.pageX - window.innerWidth / 2;\n                self.centerOffsetDisplay.html('center: ' + centerOffset).style('top', d3.event.pageY - 25 + 'px').style('left', d3.event.pageX + 35 + 'px').style('display', 'inline');\n            });\n\n            d3.select(window).on('scroll', function () {\n                self.scrollDisplay.html('scroll: ' + window.pageYOffset).style('top', window.pageYOffset + 100 + 'px').style('left', $(window).width() - 200 + 'px').style('display', 'inline');\n            });\n        }\n    }]);\n\n    return PositionHelper;\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// CSS Icon Animations\nmodule.exports = function () {\n    function PopupIcons() {\n        _classCallCheck(this, PopupIcons);\n    }\n\n    _createClass(PopupIcons, [{\n        key: 'init',\n        value: function init() {\n            window.addEventListener('pathEnd', this.animate);\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var animatedElements = $('.animated:visible');\n\n            animatedElements.each(function (index, element) {\n                // Popup animation triggered when icon is scrolled into view\n                if ($(element).attr('class').indexOf('animate-popup') === -1 && $(element).attr('class').indexOf('animate-view-popup') !== -1) {\n                    var viewportTop = $(document).scrollTop();\n                    var viewportBottom = viewportTop + $(window).height();\n                    var elementTop = Math.round($(element).offset().top);\n                    if (elementTop + 300 < viewportBottom) {\n                        $(element).addClass('animate-popup');\n                    }\n                }\n            });\n        }\n    }]);\n\n    return PopupIcons;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Scroll bound line animation\n//import * as d3 from \"d3\";\n//var d3 = require(\"d3\");\n\nmodule.exports = function () {\n    function PathAnimation() {\n        _classCallCheck(this, PathAnimation);\n\n        var w = 1920; // resolution the viewbox scaling is based on\n        var h = 1080;\n\n        var svg = d3.select('#svg-1');\n\n        var path = [[w / 2 - 5, 200], [w / 2 + 30, 300], [w / 2 - 70, 400], [w / 2 + 100, 520], [w / 2 - 100, 620], [w / 2 - 960, 660], [w / 2 - 940, 390], [w / 2 + 50, 450], [w / 2 + 160, 1410], [w / 2 + 190, 1410], [w / 2 + 450, 1300], [w / 2 + 500, 1300], [w / 2 + 1000, 5000]];\n\n        var bezierLine = d3.line().x(function (d) {\n            return d[0];\n        }).y(function (d) {\n            return d[1];\n        }).curve(d3.curveBasis);\n\n        this.progress = 0;\n\n        this.stroke = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n            var strokeLength = this.getTotalLength();\n            this.progress = this.getTotalLength() - window.pageYOffset;\n            return strokeLength + ' ' + strokeLength;\n        }).attr('stroke-dashoffset', function () {\n            return this.getTotalLength() - window.pageYOffset;\n        });\n    }\n\n    _createClass(PathAnimation, [{\n        key: 'animate',\n        value: function animate() {\n            this.stroke.attr('stroke-dashoffset', function () {\n                var posY = window.pageYOffset;\n                //var forwardOnlyProgress = Math.min(progress, this.getTotalLength()-posY);\n                //var progressWithLimit = Math.max(0, forwardOnlyProgress);\n                var lineSpeed = 4;\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 9;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 20;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('pathEnd');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }]);\n\n    return PathAnimation;\n}();\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// First animation\nvar AnimatedSheet = __webpack_require__(0);\n\nmodule.exports = new AnimatedSheet('#svg-1', {\n    keyframes: [{\n        from: 1627,\n        to: 2023,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.append('g').attr('class', 'bar').attr('transform', 'translate(' + (window.innerWidth / 2 - 300) + ', 1400)').append('rect').attr('width', 600).attr('height', 50).attr('opacity', 1).attr('fill', '#FFFFFF');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var rotation = d3.interpolateNumber(0, 90);\n            return svg.select('.bar rect').attr('transform', 'rotate(' + rotation(AnimatedSheet.easeOutElastic(interpolatePercent)) + ', 300, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2140,\n        remove: true,\n        create: function create(svg) {\n            this.trajectoryPoints = [[window.innerWidth / 2 - 275, 1355], [window.innerWidth - 50, 1000], [window.innerWidth / 2 - 300, 3200]];\n            this.trailcurve = d3.line().curve(d3.curveCatmullRom);\n            this.trajectory = svg.selectAll('line').data(this.trajectoryPoints).enter().append('path').attr('d', this.trailcurve(this.trajectoryPoints)).attr('fill', 'none');\n            this.element = svg.select('#icon-clipboard');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            function translateAlong(path, percent) {\n                var l = path.getTotalLength();\n                var p = path.getPointAtLength(percent * l);\n                return 'translate(' + (p.x - 40) + ', ' + (p.y - 36) + ')';\n            }\n            var rotation = d3.interpolateNumber(0, 360);\n\n            return createScope.element.attr('transform', translateAlong(createScope.trajectory.node(), interpolatePercent) + 'rotate(' + rotation(interpolatePercent) + ', 30, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.trajectoryPoints = [[window.innerWidth / 2 - 80, 1365], [window.innerWidth - 55, 1100], [window.innerWidth / 2 - 300, 3000]];\n            this.trailcurve = d3.line().curve(d3.curveCatmullRom);\n            this.trajectory = svg.selectAll('line').data(this.trajectoryPoints).enter().append('path').attr('d', this.trailcurve(this.trajectoryPoints)).attr('fill', 'none');\n            this.element = svg.select('#icon-database');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            function translateAlong(path, percent) {\n                var l = path.getTotalLength();\n                var p = path.getPointAtLength(percent * l);\n                return 'translate(' + (p.x - 40) + ', ' + (p.y - 36) + ')';\n            }\n            var rotation = d3.interpolateNumber(0, 360);\n\n            return createScope.element.attr('transform', translateAlong(createScope.trajectory.node(), interpolatePercent) + 'rotate(' + rotation(interpolatePercent) + ', 30, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.element = svg.select('#icon-cloud');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var arc = d3.interpolateObject({ x: window.innerWidth / 2 + 100 - 40,\n                y: 1333\n            }, {\n                x: window.innerWidth - 600,\n                y: 3000\n            });\n            var pos = arc(interpolatePercent);\n            return svg.select('#icon-cloud').attr('transform', 'translate(' + pos.x + ', ' + pos.y + ')');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.element = svg.select('#icon-app');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var arc = d3.interpolateObject({ x: window.innerWidth / 2 + 300 - 70,\n                y: 1325\n            }, {\n                x: window.innerWidth - 300,\n                y: 3200\n            });\n            var pos = arc(interpolatePercent);\n            return svg.select('#icon-app').attr('transform', 'translate(' + pos.x + ', ' + pos.y + ')');\n        }\n    }]\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Second animation\nvar AnimatedSheet = __webpack_require__(0);\n\nmodule.exports = new AnimatedSheet('#svg-2', {\n    keyframes: [{\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 + 800, -150], [w / 2 + 800, 600], [w / 2 + 100, 600], [w / 2 - 280, 980], [w / 2 - 500, 1200], [w / 2 - 500, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top;\n                var posY = Math.max(0, window.pageYOffset + window.innerHeight / 2 - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1450,\n        to: 1550,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.select('#chip').attr('z-index', 99).moveToFront();\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var color = d3.interpolate('gray', 'white');\n            return this.element.style('fill', color(interpolatePercent));\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 230, 1000], [w / 2 - 450, 1220], [w / 2 - 450, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 160, 1000], [w / 2 - 400, 1250], [w / 2 - 400, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 92, 1000], [w / 2 - 350, 1270], [w / 2 - 350, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }]\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Third animation\nvar AnimatedSheet = __webpack_require__(0);\n\nmodule.exports = new AnimatedSheet('#svg-3', {\n    defs: [{\n        filter: function filter(svg) {\n            return svg.append(\"defs\").append(\"filter\").attr(\"id\", \"motionFilter\").append(\"feGaussianBlur\").attr(\"class\", \"blurValues\").attr(\"in\", \"SourceGraphic\").attr(\"stdDeviation\", \"8 0\");\n        }\n    }],\n    keyframes: [{\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 500, -150], [w / 2 - 500, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 450, -150], [w / 2 - 450, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 400, -150], [w / 2 - 400, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 350, -150], [w / 2 - 350, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 500,\n        to: 650,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.selectAll('#path-image-1').attr(\"filter\", \"url(#motionFilter)\");\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var self = this;\n            return this.element;\n            this.element.style('visibility', 'visible').transition().duration(2000).attr('cx', 300).ease(d3.easeLinear).attr(\"transform\", \"translate(250, 50)\").duration(1000);\n            //.style(\"opacity\", 1);\n\n            d3.select(\"#motionFilter .blurValues\").transition().duration(200).delay(200).attrTween(\"stdDeviation\", function () {\n                return d3.interpolateString(\"0\", \"8\");\n            }).transition().duration(200).attrTween(\"stdDeviation\", function () {\n                return d3.interpolateString(\"8\", \"0\");\n            });\n        }\n    }]\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 130408178ba4f894a359","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Animated svg sections\nmodule.exports = function () {\n    function AnimatedSheet(svgSelector, options) {\n        _classCallCheck(this, AnimatedSheet);\n\n        d3.selection.prototype.moveToFront = function () {\n            return this.each(function () {\n                this.parentNode.appendChild(this);\n            });\n        };\n\n        this.svgElement = $(svgSelector);\n        //if(this.svgElement) {\n        //    this.svg = svgElement;\n        //} else {\n        if (!this.svgElement) {\n            console.error('No svg found by selector \"' + svgSelector + '\"');\n        }\n\n        this.d3Svg = d3.select(svgSelector).attr('width', options.width ? options.width : '100%');\n\n        var self = this;\n\n        // resize viewbox on small displays\n        var reformatViewbox = function reformatViewbox() {\n            var screenWidth = 1920;\n            var screenHeight = 2000;\n            var positionShiftX = 0;\n            var positionShiftY = -(1 / window.innerWidth) * 100 * 100 * 25;\n            var viewboxValue = positionShiftX + ' ' + positionShiftY + ' ' + screenWidth + ' ' + screenHeight;\n\n            //console.log('reformat', viewboxValue);\n            self.d3Svg.attr('height', 2000).attr('viewBox', viewboxValue).attr('preserveAspectRatio', 'xMinYMin meet');\n\n            if (Foundation.MediaQuery.current === 'medium') {\n                self.d3Svg.attr('height', 1400);\n            }\n            if (Foundation.MediaQuery.current === 'small') {\n                self.d3Svg.attr('height', 800);\n            }\n        };\n\n        this.scopes = [];\n\n        if (options.defs) {\n            options.defs.forEach(function (def, index) {\n                if (def.filter) {\n                    def.filter(self.d3Svg);\n                }\n            });\n        }\n\n        //this.init = function() {\n        options.keyframes.forEach(function (keyframe, scopeIndex) {\n            var createScope = keyframe.create(self.d3Svg);\n            if (createScope.element) {\n                createScope.element.attr('visibility', 'visible');\n            } else {\n                console.warn('The create function should return the element key, so it can be accessed in the animate/interpolate function via the \"createScope\" parameter');\n            }\n            self.scopes[scopeIndex] = createScope;\n        });\n        reformatViewbox();\n        window.addEventListener('resize', reformatViewbox);\n        //}();\n        this.keyframes = options.keyframes;\n\n        return this.animate();\n    }\n\n    _createClass(AnimatedSheet, [{\n        key: 'animate',\n        value: function animate() {\n            var self = this;\n            var h = 1080;\n            var svgPosition = this.svgElement.position().top;\n            var progress = window.pageYOffset - svgPosition + h;\n            this.keyframes.forEach(function (keyframe, scopeIndex) {\n                var from = self.resizeBreakpointsToMedia(0, keyframe.from).y;\n                var to = self.resizeBreakpointsToMedia(0, keyframe.to).y;\n                if (keyframe.interpolate) {\n                    var percent = 0;\n                    // start default value\n                    if (progress < from) {\n                        percent = 0;\n                    }\n                    // all values inbetween\n                    if (progress >= from && progress <= to) {\n                        var totalLength = to - from;\n                        var progressFromStart = progress - from;\n                        var openPercent = progressFromStart * 100 / totalLength;\n                        percent = Math.min(Math.max(0, openPercent), 100) / 100;\n                    }\n                    // end default value\n                    if (progress > to) {\n                        percent = 1;\n                    }\n                    //console.log('from', from, 'to', to, 'progress', progress, 'percent', percent);\n                    keyframe.interpolate(self.d3Svg, self.scopes[scopeIndex], percent);\n                } else {\n                    //console.log('position', keyframe.position, 'progress', progress, 'remove', keyframe.remove);\n                    if (progress >= keyframe.position && !keyframe.running) {\n                        var animatedElement = keyframe.animate(self.d3Svg, self.scopes[scopeIndex]);\n                        if (keyframe.remove) {\n                            animatedElement.on('end', function () {\n                                this.remove();\n                            });\n                        }\n                        keyframe.running = true;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {}\n    }, {\n        key: 'resizeBreakpointsToMedia',\n        value: function resizeBreakpointsToMedia(x, y) {\n            var factor = 1.115;\n            if (Foundation.MediaQuery.current === 'medium') {\n                factor = 0.84;\n            }\n            if (Foundation.MediaQuery.current === 'small') {\n                factor = 0.72;\n            }\n\n            return {\n                x: x * factor,\n                y: y * factor\n            };\n        }\n    }], [{\n        key: 'easeOutElastic',\n        value: function easeOutElastic(t) {\n            var p = 0.4;\n            return Math.pow(2, -10 * t) * Math.sin((t - p / 4) * (2 * Math.PI) / p) + 1;\n        }\n    }]);\n\n    return AnimatedSheet;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/animated-sheet.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nvar positionHelper = require('./position-helper');\nvar popupIcons = require('./popup-icons');\nvar pathAnimation = require('./path-animations');\nvar animatedSheet = require('./animated-sheet');\n\nvar firstAnimation = require('./animation-1');\nvar secondAnimation = require('./animation-2');\nvar thirdAnimation = require('./animation-3');\n\n$(document).foundation();\n\n// TODO: generalize svg attribute initialization somewhere\nvar screenWidth = 1920;\nvar screenHeight = 2000;\nvar positionShiftX = 0;\nvar positionShiftY = -(1 / window.innerWidth) * 100 * 100 * 25;\nvar viewboxValue = positionShiftX + ' ' + positionShiftY + ' ' + screenWidth + ' ' + screenHeight;\n\nvar d3Svg = d3.select('#svg-1').attr('width', '100%').attr('height', '2000').attr('viewBox', viewboxValue).attr('preserveAspectRatio', 'xMinYMin meet');\n\nvar path1 = new pathAnimation();\nvar icons1 = new popupIcons();\n\nvar sheet1 = firstAnimation;\nvar sheet2 = secondAnimation;\nvar sheet3 = thirdAnimation;\n\nd3.select(window).on('scroll.scroller', function () {\n    path1.animate();\n    icons1.animate();\n    sheet1.animate();\n    sheet2.animate();\n    sheet3.animate();\n});\n\nvar helper = new positionHelper().show();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Helper that shows x/y position of the cursor\nmodule.exports = function () {\n    function PositionHelper() {\n        _classCallCheck(this, PositionHelper);\n\n        this.positionDisplay = d3.select('body').append('div').attr('data-allow-html', true).attr('class', 'tooltip top').style('display', 'none');\n        this.centerOffsetDisplay = d3.select('body').append('div').attr('class', 'tooltip right').style('display', 'none');\n        this.scrollDisplay = d3.select('body').append('span').attr('class', 'tooltip bottom').style('width', '200px').style('text-align', 'center').style('display', 'none');\n    }\n\n    _createClass(PositionHelper, [{\n        key: 'show',\n        value: function show() {\n            var self = this;\n\n            d3.select(window).on('mousemove', function () {\n                self.positionDisplay.html('x: ' + d3.event.pageX + '<br /> y: ' + d3.event.pageY).style('top', d3.event.pageY - 100 + 'px').style('left', d3.event.pageX - 34 + 'px').style('display', 'inline');\n                var centerOffset = d3.event.pageX - window.innerWidth / 2;\n                self.centerOffsetDisplay.html('center: ' + centerOffset).style('top', d3.event.pageY - 25 + 'px').style('left', d3.event.pageX + 35 + 'px').style('display', 'inline');\n            });\n\n            d3.select(window).on('scroll', function () {\n                self.scrollDisplay.html('scroll: ' + window.pageYOffset).style('top', window.pageYOffset + 100 + 'px').style('left', $(window).width() - 200 + 'px').style('display', 'inline');\n            });\n        }\n    }]);\n\n    return PositionHelper;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/position-helper.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// CSS Icon Animations\nmodule.exports = function () {\n    function PopupIcons() {\n        _classCallCheck(this, PopupIcons);\n    }\n\n    _createClass(PopupIcons, [{\n        key: 'init',\n        value: function init() {\n            window.addEventListener('pathEnd', this.animate);\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var animatedElements = $('.animated:visible');\n\n            animatedElements.each(function (index, element) {\n                // Popup animation triggered when icon is scrolled into view\n                if ($(element).attr('class').indexOf('animate-popup') === -1 && $(element).attr('class').indexOf('animate-view-popup') !== -1) {\n                    var viewportTop = $(document).scrollTop();\n                    var viewportBottom = viewportTop + $(window).height();\n                    var elementTop = Math.round($(element).offset().top);\n                    if (elementTop + 300 < viewportBottom) {\n                        $(element).addClass('animate-popup');\n                    }\n                }\n            });\n        }\n    }]);\n\n    return PopupIcons;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/popup-icons.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Scroll bound line animation\n//import * as d3 from \"d3\";\n//var d3 = require(\"d3\");\n\nmodule.exports = function () {\n    function PathAnimation() {\n        _classCallCheck(this, PathAnimation);\n\n        var w = 1920; // resolution the viewbox scaling is based on\n        var h = 1080;\n\n        var svg = d3.select('#svg-1');\n\n        var path = [[w / 2 - 5, 200], [w / 2 + 30, 300], [w / 2 - 70, 400], [w / 2 + 100, 520], [w / 2 - 100, 620], [w / 2 - 960, 660], [w / 2 - 940, 390], [w / 2 + 50, 450], [w / 2 + 160, 1410], [w / 2 + 190, 1410], [w / 2 + 450, 1300], [w / 2 + 500, 1300], [w / 2 + 1000, 5000]];\n\n        var bezierLine = d3.line().x(function (d) {\n            return d[0];\n        }).y(function (d) {\n            return d[1];\n        }).curve(d3.curveBasis);\n\n        this.progress = 0;\n\n        this.stroke = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n            var strokeLength = this.getTotalLength();\n            this.progress = this.getTotalLength() - window.pageYOffset;\n            return strokeLength + ' ' + strokeLength;\n        }).attr('stroke-dashoffset', function () {\n            return this.getTotalLength() - window.pageYOffset;\n        });\n    }\n\n    _createClass(PathAnimation, [{\n        key: 'animate',\n        value: function animate() {\n            this.stroke.attr('stroke-dashoffset', function () {\n                var posY = window.pageYOffset;\n                //var forwardOnlyProgress = Math.min(progress, this.getTotalLength()-posY);\n                //var progressWithLimit = Math.max(0, forwardOnlyProgress);\n                var lineSpeed = 4;\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 9;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 20;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('pathEnd');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }]);\n\n    return PathAnimation;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/path-animations.js\n// module id = 4\n// module chunks = 0","'use strict';\n\n// First animation\nvar AnimatedSheet = require(\"./animated-sheet\");\n\nmodule.exports = new AnimatedSheet('#svg-1', {\n    keyframes: [{\n        from: 1627,\n        to: 2023,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.append('g').attr('class', 'bar').attr('transform', 'translate(' + (window.innerWidth / 2 - 300) + ', 1400)').append('rect').attr('width', 600).attr('height', 50).attr('opacity', 1).attr('fill', '#FFFFFF');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var rotation = d3.interpolateNumber(0, 90);\n            return svg.select('.bar rect').attr('transform', 'rotate(' + rotation(AnimatedSheet.easeOutElastic(interpolatePercent)) + ', 300, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2140,\n        remove: true,\n        create: function create(svg) {\n            this.trajectoryPoints = [[window.innerWidth / 2 - 275, 1355], [window.innerWidth - 50, 1000], [window.innerWidth / 2 - 300, 3200]];\n            this.trailcurve = d3.line().curve(d3.curveCatmullRom);\n            this.trajectory = svg.selectAll('line').data(this.trajectoryPoints).enter().append('path').attr('d', this.trailcurve(this.trajectoryPoints)).attr('fill', 'none');\n            this.element = svg.select('#icon-clipboard');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            function translateAlong(path, percent) {\n                var l = path.getTotalLength();\n                var p = path.getPointAtLength(percent * l);\n                return 'translate(' + (p.x - 40) + ', ' + (p.y - 36) + ')';\n            }\n            var rotation = d3.interpolateNumber(0, 360);\n\n            return createScope.element.attr('transform', translateAlong(createScope.trajectory.node(), interpolatePercent) + 'rotate(' + rotation(interpolatePercent) + ', 30, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.trajectoryPoints = [[window.innerWidth / 2 - 80, 1365], [window.innerWidth - 55, 1100], [window.innerWidth / 2 - 300, 3000]];\n            this.trailcurve = d3.line().curve(d3.curveCatmullRom);\n            this.trajectory = svg.selectAll('line').data(this.trajectoryPoints).enter().append('path').attr('d', this.trailcurve(this.trajectoryPoints)).attr('fill', 'none');\n            this.element = svg.select('#icon-database');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            function translateAlong(path, percent) {\n                var l = path.getTotalLength();\n                var p = path.getPointAtLength(percent * l);\n                return 'translate(' + (p.x - 40) + ', ' + (p.y - 36) + ')';\n            }\n            var rotation = d3.interpolateNumber(0, 360);\n\n            return createScope.element.attr('transform', translateAlong(createScope.trajectory.node(), interpolatePercent) + 'rotate(' + rotation(interpolatePercent) + ', 30, 25)');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.element = svg.select('#icon-cloud');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var arc = d3.interpolateObject({ x: window.innerWidth / 2 + 100 - 40,\n                y: 1333\n            }, {\n                x: window.innerWidth - 600,\n                y: 3000\n            });\n            var pos = arc(interpolatePercent);\n            return svg.select('#icon-cloud').attr('transform', 'translate(' + pos.x + ', ' + pos.y + ')');\n        }\n    }, {\n        from: 1627,\n        to: 2240,\n        remove: true,\n        create: function create(svg) {\n            this.element = svg.select('#icon-app');\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var arc = d3.interpolateObject({ x: window.innerWidth / 2 + 300 - 70,\n                y: 1325\n            }, {\n                x: window.innerWidth - 300,\n                y: 3200\n            });\n            var pos = arc(interpolatePercent);\n            return svg.select('#icon-app').attr('transform', 'translate(' + pos.x + ', ' + pos.y + ')');\n        }\n    }]\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/animation-1.js\n// module id = 5\n// module chunks = 0","'use strict';\n\n// Second animation\nvar AnimatedSheet = require(\"./animated-sheet\");\n\nmodule.exports = new AnimatedSheet('#svg-2', {\n    keyframes: [{\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 + 800, -150], [w / 2 + 800, 600], [w / 2 + 100, 600], [w / 2 - 280, 980], [w / 2 - 500, 1200], [w / 2 - 500, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top;\n                var posY = Math.max(0, window.pageYOffset + window.innerHeight / 2 - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1450,\n        to: 1550,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.select('#chip').attr('z-index', 99).moveToFront();\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var color = d3.interpolate('gray', 'white');\n            return this.element.style('fill', color(interpolatePercent));\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 230, 1000], [w / 2 - 450, 1220], [w / 2 - 450, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 160, 1000], [w / 2 - 400, 1250], [w / 2 - 400, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 1550,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 92, 1000], [w / 2 - 350, 1270], [w / 2 - 350, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                //let startY = $(svg.node()).offset().top;\n                var startY = 3630;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }]\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/animation-2.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\n// Third animation\nvar AnimatedSheet = require(\"./animated-sheet\");\n\nmodule.exports = new AnimatedSheet('#svg-3', {\n    defs: [{\n        filter: function filter(svg) {\n            return svg.append(\"defs\").append(\"filter\").attr(\"id\", \"motionFilter\").append(\"feGaussianBlur\").attr(\"class\", \"blurValues\").attr(\"in\", \"SourceGraphic\").attr(\"stdDeviation\", \"8 0\");\n        }\n    }],\n    keyframes: [{\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 500, -150], [w / 2 - 500, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 450, -150], [w / 2 - 450, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 400, -150], [w / 2 - 400, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 0,\n        to: 2000,\n        remove: false,\n        create: function create(svg) {\n            var w = 1920; // resolution the viewbox scaling is based on\n            var h = 1080;\n            var path = [[w / 2 - 350, -150], [w / 2 - 350, 2000]];\n            var bezierLine = d3.line().x(function (d) {\n                return d[0];\n            }).y(function (d) {\n                return d[1];\n            });\n\n            this.progress = 0;\n\n            this.element = svg.selectAll('line').data([window.pageYOffset]).enter().append('path').attr('d', bezierLine(path)).attr('stroke', '#FFFFFF').attr('stroke-width', 10).attr('fill', 'none').attr('stroke-linecap', 'round').attr('stroke-dasharray', function () {\n                var strokeLength = this.getTotalLength();\n                this.progress = this.getTotalLength() - window.pageYOffset;\n                return strokeLength + ' ' + strokeLength;\n            }).attr('stroke-dashoffset', function () {\n                return this.getTotalLength() - window.pageYOffset;\n            });\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            //return;\n            var self = this;\n            this.element.attr('stroke-dashoffset', function () {\n                var startY = $(svg.node()).offset().top - window.innerHeight / 3;\n                var posY = Math.max(0, window.pageYOffset - startY);\n                var lineSpeed = 1.5;\n\n                if (Foundation.MediaQuery.current === 'medium') {\n                    lineSpeed = 7;\n                }\n                if (Foundation.MediaQuery.current === 'small') {\n                    lineSpeed = 16;\n                }\n                var progress = this.getTotalLength() - posY * lineSpeed;\n\n                // event when path has reached its full length\n                if (progress < 0) {\n                    var endEvent = new Event('path2End');\n                    window.dispatchEvent(endEvent);\n                }\n\n                return progress;\n            });\n        }\n    }, {\n        from: 500,\n        to: 650,\n        remove: false,\n        create: function create(svg) {\n            this.element = svg.selectAll('#path-image-1').attr(\"filter\", \"url(#motionFilter)\");\n\n            return this;\n        },\n        interpolate: function interpolate(svg, createScope, interpolatePercent) {\n            var self = this;\n            return this.element;\n            this.element.style('visibility', 'visible').transition().duration(2000).attr('cx', 300).ease(d3.easeLinear).attr(\"transform\", \"translate(250, 50)\").duration(1000);\n            //.style(\"opacity\", 1);\n\n            d3.select(\"#motionFilter .blurValues\").transition().duration(200).delay(200).attrTween(\"stdDeviation\", function () {\n                return d3.interpolateString(\"0\", \"8\");\n            }).transition().duration(200).attrTween(\"stdDeviation\", function () {\n                return d3.interpolateString(\"8\", \"0\");\n            });\n        }\n    }]\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/animation-3.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}